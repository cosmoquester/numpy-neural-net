version: 2.1

executors:
  python-executor:
    working_directory: ~/numpy-neural-net
    docker:
      - image: circleci/python:3.8

jobs:
  run-test:
    executor: python-executor
    steps:
      - checkout

      - restore_cache:
          key: deps-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Create Virtual Environment and Install Dependencies
          command: |
            virtualenv env
            source env/bin/activate
            pip install -r requirements.txt -r requirements-dev.txt

      - save_cache:
          key: deps-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Run Tests
          command: |
            source env/bin/activate
            pytest --cov-branch --cov numpy_nn

      - run:
          name: Upload coverage report
          command: |
            source env/bin/activate
            codecov

  check-linting:
    executor: python-executor
    steps:
      - checkout

      - restore_cache:
          key: deps-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Create Virtual Environment and Install Dependencies
          command: |
            virtualenv env
            source env/bin/activate
            pip install -r requirements.txt -r requirements-dev.txt

      - save_cache:
          key: deps-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Run black, isort
          command: |
            source env/bin/activate
            black --check numpy_nn tests
            isort numpy_nn tests

workflows:
  main:
    jobs:
      - run-test
      - check-linting
